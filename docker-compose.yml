version: '3'
services:
  jellyfin:
    container_name: jellyfin
    image: "jellyfin/jellyfin:latest"
    user: 1000:1000
    environment:
      SET_CONTAINER_TIMEZONE: 'true'
      CONTAINER_TIMEZONE: America/Santiago
      TZ: America/Santiago
    volumes:
      - ./config:/config
      - ./cache:/cache
      - ./media:/media
      - ./transcode:/transcode
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
  movie-roulette:
    image: sahara101/movie-roulette:latest # sahara101/movie-roulette:arm-latest
    container_name: movie-roulette
    ports:
      - 4000:4000
    volumes:
      - ./movie-roulette:/app/data
    restart: unless-stopped
    user: 1000:1000
    environment:
      SET_CONTAINER_TIMEZONE: 'true'
      CONTAINER_TIMEZONE: America/Santiago
      TZ: America/Santiago
  # jellystat-db:
  #   container_name: jellystat-db
  #   image: postgres:15.2
  #   environment:
  #     POSTGRES_DB: 'jfstat'
  #     SET_CONTAINER_TIMEZONE: 'true'
  #     CONTAINER_TIMEZONE: America/Santiago
  #     TZ: America/Santiago
  #   volumes:
  #   - ./postgres-data:/var/lib/postgresql/data # Mounting the volume
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready", "-d", "jfstat"]
  #     interval: 30s
  #     timeout: 60s
  #     retries: 5
  #     start_period: 80s  
  # jellystat:
  #   container_name: jellystat
  #   image: cyfershepard/jellystat:latest
  #   environment:
  #     SET_CONTAINER_TIMEZONE: 'true'
  #     CONTAINER_TIMEZONE: America/Santiago
  #     TZ: America/Santiago
  #   ports:
  #     - "3000:3000" #Server Port
  #   volumes:
  #     - ./backup-data:/app/backend/backup-data # Mounting the volume
  #   depends_on:
  #     - jellystat-db

volumes:
  config:
  cache:
  media:
  transcode:
  # postgres-data:
  # data:
  # backup-data: